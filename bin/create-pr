#!/usr/bin/env python3

import os
import subprocess
import sys
from pathlib import Path

ROOT = Path(__file__).resolve().parent.parent


def main() -> None:
    if len(sys.argv) < 2:
        print(f"USAGE: {sys.argv[0]} branchname", file=sys.stderr)
        sys.exit(1)

    os.chdir(str(ROOT))

    hase = ROOT.parent.joinpath("hase")
    if hase.exists():
        os.environ["MYPYPATH"] = str(hase)
        if subprocess.call(["mypy", "--version"]) == 0:
            subprocess.check_call(["mypy", "bugdb", "bin"])
    else:
        print("skip mypy check, hase not found at {}".format(hase))

    if subprocess.call(["flake8", "--version"]) == 0:
        subprocess.check_call(["flake8", "bugdb"])

    branchname = sys.argv[1]
    current_branch = subprocess.check_output(["git", "symbolic-ref", "--short", "HEAD"])
    if current_branch.strip() != b"master":
        print("switch to master branch first", file=sys.stderr)
        sys.exit(1)
    subprocess.call(["git", "branch", "-d", branchname])
    subprocess.check_call(["git", "checkout", "-b", branchname])
    subprocess.check_call(["git", "push", "origin", branchname])
    if subprocess.call(["hub", "--version"]) == 0:
        subprocess.check_call(["hub", "pull-request"])
    else:
        print("Run now:")
        print(f"git push origin {branchname}")
    subprocess.check_call(["git", "checkout", "-"])


if __name__ == "__main__":
    main()
